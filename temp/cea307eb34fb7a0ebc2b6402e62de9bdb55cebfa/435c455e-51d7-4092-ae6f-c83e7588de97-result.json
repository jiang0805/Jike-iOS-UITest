{"name": "test_02_logout", "status": "broken", "statusDetails": {"message": "Exception: ('element not found', 'timeout 30.0')", "trace": "args = (<pageObject.login.Login object at 0x7fbb75648190>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n>           return func(*args, **kwargs)\n\ncommon/decorator.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pageObject.login.Login object at 0x7fbb75648190>\n\n    @allure.step('退出登录')\n    @step\n    def logout(self):\n        # 退出登录\n        log.i(\"退出登录\")\n>       self.s(name=\"我\", className=\"Button\").click()\n\npageObject/login.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <wda.Selector object at 0x7fbb757556a0>, timeout = None\n\n    def click(self, timeout: Optional[float] = None):\n        \"\"\"\n        Click element\n    \n        Args:\n            timeout (float): max wait seconds\n        \"\"\"\n>       e = self.get(timeout=timeout)\n\nvenv/lib/python3.9/site-packages/wda/__init__.py:1552: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <wda.Selector object at 0x7fbb757556a0>, timeout = 30.0\nraise_error = True\n\n    def get(self, timeout=None, raise_error=True):\n        \"\"\"\n        Args:\n            timeout (float): timeout for query element, unit seconds\n                Default 10s\n            raise_error (bool): whether to raise error if element not found\n    \n        Returns:\n            Element: UI Element\n    \n        Raises:\n            WDAElementNotFoundError if raise_error is True else None\n        \"\"\"\n        start_time = time.time()\n        if timeout is None:\n            timeout = self._timeout\n        while True:\n            elems = self.find_elements()\n            if len(elems) > 0:\n                return elems[0]\n            if start_time + timeout < time.time():\n                break\n            time.sleep(0.5)\n    \n        if raise_error:\n>           raise WDAElementNotFoundError(\"element not found\",\n                                          \"timeout %.1f\" % timeout)\nE           wda.exceptions.WDAElementNotFoundError: ('element not found', 'timeout 30.0')\n\nvenv/lib/python3.9/site-packages/wda/__init__.py:1513: WDAElementNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fbb74806d00>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057424694.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057424694.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xfd\\xff\\xff\\xf3\\xff\\xfd\\xff\\xff\\xfd\\xf8\\xff\\xea\\x82\\xff\\xcd\\x10\\xf...0dI\\xe2\\xceI\\xa2$\\xed\\xa8\\xe4J\\xc2NK\\xbad\\xeb\\xc0dL\\xa6\\xceL\\xd2d\\xe9\\xd8\\xe4M\\x86NN\\xead\\xe7\\xf0dOfN\\x02\\x04\\x04\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n>           ret = func(*args, **kwargs)\n\ncommon/decorator.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_00_login.TestLogin object at 0x7fbb74806d00>\n\n    @allure.description(\"登出账号\")\n    @case\n    def test_02_logout(self):\n>       login.logout()\n\ntests/test_00_login.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def logout():\n>       page.logout()\n\npageObject/login.py:169: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\na = (<pageObject.login.Login object at 0x7fbb75648190>,), kw = {}\n__tracebackhide__ = True\nparams = OrderedDict([('args', '(<pageObject.login.Login object at 0x7fbb75648190>,)')])\nargs = ['<pageObject.login.Login object at 0x7fbb75648190>']\n\n    @wraps(func)\n    def impl(*a, **kw):\n        __tracebackhide__ = True\n        params = func_parameters(func, *a, **kw)\n        args = list(map(lambda x: represent(x), a))\n        with StepContext(self.title.format(*args, **params), params):\n>           return func(*a, **kw)\n\nvenv/lib/python3.9/site-packages/allure_commons/_allure.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<pageObject.login.Login object at 0x7fbb75648190>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n            return func(*args, **kwargs)\n        except requests.ConnectionError:\n            print(\"ConnectionError\")\n            reset_driver()\n            func(*args, **kwargs)\n        except Exception as e:\n            log.e('\\t<-- %s, %s, %s', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: ('element not found', 'timeout 30.0')\n\ncommon/decorator.py:90: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fbb74806d00>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057424694.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057424694.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xfd\\xff\\xff\\xf3\\xff\\xfd\\xff\\xff\\xfd\\xf8\\xff\\xea\\x82\\xff\\xcd\\x10\\xf...0dI\\xe2\\xceI\\xa2$\\xed\\xa8\\xe4J\\xc2NK\\xbad\\xeb\\xc0dL\\xa6\\xceL\\xd2d\\xe9\\xd8\\xe4M\\x86NN\\xead\\xe7\\xf0dOfN\\x02\\x04\\x04\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except wda.WDAElementNotFoundError:\n            print(\"WDAElementNotFoundError\")\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except Exception as e:\n            log.e('<-- %s, %s, %s\\n', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: ('element not found', 'timeout 30.0')\n\ncommon/decorator.py:115: Exception"}, "description": "登出账号", "steps": [{"name": "退出登录", "status": "broken", "statusDetails": {"message": "Exception: ('element not found', 'timeout 30.0')\n", "trace": "  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/jike/PycharmProjects/pythonProject/common/decorator.py\", line 90, in wrapper\n    raise Exception(e)\n"}, "attachments": [{"name": "Login.logout-20220624155703.PNG", "source": "ed804f58-355c-43b6-9a4a-d447f7f3e46a-attachment.png", "type": "image/png"}], "parameters": [{"name": "args", "value": "(<pageObject.login.Login object at 0x7fbb75648190>,)"}], "start": 1656057392403, "stop": 1656057424403}], "attachments": [{"name": "case.gif", "source": "61851f32-06ae-4bb3-8d49-7a5bd81eaf56-attachment.gif", "type": "image/gif"}, {"name": "log", "source": "bbc0eb1b-41a7-4c66-b33a-db3ba3c8d107-attachment.txt", "type": "text/plain"}], "start": 1656057392402, "stop": 1656057425596, "uuid": "851b8d0d-2121-4e9f-b489-e52f7ea9382f", "historyId": "bcf2bab7dcad3af909f858d9d2b34851", "testCaseId": "3d01b057db4bc879581203a15b03603b", "fullName": "tests.test_00_login.TestLogin#test_02_logout", "labels": [{"name": "feature", "value": "登录"}, {"name": "tag", "value": "jw"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_00_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "jikedeMBP-4"}, {"name": "thread", "value": "30743-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_00_login"}]}