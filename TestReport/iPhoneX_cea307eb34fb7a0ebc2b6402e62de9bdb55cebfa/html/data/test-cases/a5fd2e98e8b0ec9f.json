{"uid":"a5fd2e98e8b0ec9f","name":"test_01_phone_login","fullName":"tests.test_00_login.TestLogin#test_01_phone_login","historyId":"6bbda9dd678259dc795c231e4fb7cb31","time":{"start":1656057729552,"stop":1656057750561,"duration":21009},"description":"登录账号","descriptionHtml":"<p>登录账号</p>\n","status":"broken","statusMessage":"Exception: 未检查到动态tab","statusTrace":"args = (<pageObject.login.Login object at 0x7fc40e64fa60>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n>           return func(*args, **kwargs)\n\ncommon/decorator.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pageObject.login.Login object at 0x7fc40e64fa60>\n\n    @allure.step('根据动态tab和我-编辑按钮，检查是否登录账号')\n    @step\n    def check_login_status(self):\n        # 根据动态tab和我-编辑按钮，检查是否登录账号\n        log.i(\"根据动态tab和我-编辑按钮，检查是否登录账号\")\n>       assert self.s(name=\"动态\", className=\"Button\").exists, \"未检查到动态tab\"\nE       AssertionError: 未检查到动态tab\n\npageObject/login.py:123: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fc40e00e610>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057748575.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057748575.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xfe\\xff\\xff\\xff\\xfd\\xff\\xfe\\xf9\\xff\\xfe\\xf3\\xff\\xfe\\xec\\xff\\xfd\\xf0\\xf...d6a-\\xd6cM\\xd6em\\xd6g\\x8d\\xd6i\\xad\\xd6k\\xcd\\xd6m\\xed\\xd6o\\r\\xd7q-\\xd7sM\\xd7um\\xd7w\\x8d\\xd7y\\xad\\xd7{]\\xa8\\x01\\x01\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n>           ret = func(*args, **kwargs)\n\ncommon/decorator.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_00_login.TestLogin object at 0x7fc40e00e610>\n\n    @allure.description(\"登录账号\")\n    @case\n    def test_01_phone_login(self):\n>       login.phone_login(\"14030073007\", \"123456\")\n\ntests/test_00_login.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nphone = '14030073007', password = '123456'\n\n    def phone_login(phone, password):\n        # page.select_agreement_update_agree()\n        page.select_more_login_window()\n        page.select_agreement_box_window()\n        page.select_phone_login()\n        time.sleep(1)\n        page.select_phone_psw_login()\n        page.select_phone_password(phone, password)\n>       page.check_login_status()\n\npageObject/login.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\na = (<pageObject.login.Login object at 0x7fc40e64fa60>,), kw = {}\n__tracebackhide__ = True\nparams = OrderedDict([('args', '(<pageObject.login.Login object at 0x7fc40e64fa60>,)')])\nargs = ['<pageObject.login.Login object at 0x7fc40e64fa60>']\n\n    @wraps(func)\n    def impl(*a, **kw):\n        __tracebackhide__ = True\n        params = func_parameters(func, *a, **kw)\n        args = list(map(lambda x: represent(x), a))\n        with StepContext(self.title.format(*args, **params), params):\n>           return func(*a, **kw)\n\nvenv/lib/python3.9/site-packages/allure_commons/_allure.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<pageObject.login.Login object at 0x7fc40e64fa60>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n            return func(*args, **kwargs)\n        except requests.ConnectionError:\n            print(\"ConnectionError\")\n            reset_driver()\n            func(*args, **kwargs)\n        except Exception as e:\n            log.e('\\t<-- %s, %s, %s', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: 未检查到动态tab\n\ncommon/decorator.py:90: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fc40e00e610>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057748575.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057748575.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xfe\\xff\\xff\\xff\\xfd\\xff\\xfe\\xf9\\xff\\xfe\\xf3\\xff\\xfe\\xec\\xff\\xfd\\xf0\\xf...d6a-\\xd6cM\\xd6em\\xd6g\\x8d\\xd6i\\xad\\xd6k\\xcd\\xd6m\\xed\\xd6o\\r\\xd7q-\\xd7sM\\xd7um\\xd7w\\x8d\\xd7y\\xad\\xd7{]\\xa8\\x01\\x01\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except wda.WDAElementNotFoundError:\n            print(\"WDAElementNotFoundError\")\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except Exception as e:\n            log.e('<-- %s, %s, %s\\n', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: 未检查到动态tab\n\ncommon/decorator.py:115: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"xunit_setup_method_fixture_TestLogin","time":{"start":1656057726358,"stop":1656057729552,"duration":3194},"status":"passed","steps":[],"attachments":[{"uid":"e472420a2f56f6c","name":"init.activate_app-20220624160207.PNG","source":"e472420a2f56f6c.png","type":"image/png","size":367434},{"uid":"13f9d1695a86cdaa","name":"init.check_login_status-20220624160209.PNG","source":"13f9d1695a86cdaa.png","type":"image/png","size":367434}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"登录账号","status":"broken","statusMessage":"Exception: 未检查到动态tab","statusTrace":"args = (<pageObject.login.Login object at 0x7fc40e64fa60>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n>           return func(*args, **kwargs)\n\ncommon/decorator.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pageObject.login.Login object at 0x7fc40e64fa60>\n\n    @allure.step('根据动态tab和我-编辑按钮，检查是否登录账号')\n    @step\n    def check_login_status(self):\n        # 根据动态tab和我-编辑按钮，检查是否登录账号\n        log.i(\"根据动态tab和我-编辑按钮，检查是否登录账号\")\n>       assert self.s(name=\"动态\", className=\"Button\").exists, \"未检查到动态tab\"\nE       AssertionError: 未检查到动态tab\n\npageObject/login.py:123: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fc40e00e610>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057748575.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057748575.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xfe\\xff\\xff\\xff\\xfd\\xff\\xfe\\xf9\\xff\\xfe\\xf3\\xff\\xfe\\xec\\xff\\xfd\\xf0\\xf...d6a-\\xd6cM\\xd6em\\xd6g\\x8d\\xd6i\\xad\\xd6k\\xcd\\xd6m\\xed\\xd6o\\r\\xd7q-\\xd7sM\\xd7um\\xd7w\\x8d\\xd7y\\xad\\xd7{]\\xa8\\x01\\x01\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n>           ret = func(*args, **kwargs)\n\ncommon/decorator.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_00_login.TestLogin object at 0x7fc40e00e610>\n\n    @allure.description(\"登录账号\")\n    @case\n    def test_01_phone_login(self):\n>       login.phone_login(\"14030073007\", \"123456\")\n\ntests/test_00_login.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nphone = '14030073007', password = '123456'\n\n    def phone_login(phone, password):\n        # page.select_agreement_update_agree()\n        page.select_more_login_window()\n        page.select_agreement_box_window()\n        page.select_phone_login()\n        time.sleep(1)\n        page.select_phone_psw_login()\n        page.select_phone_password(phone, password)\n>       page.check_login_status()\n\npageObject/login.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\na = (<pageObject.login.Login object at 0x7fc40e64fa60>,), kw = {}\n__tracebackhide__ = True\nparams = OrderedDict([('args', '(<pageObject.login.Login object at 0x7fc40e64fa60>,)')])\nargs = ['<pageObject.login.Login object at 0x7fc40e64fa60>']\n\n    @wraps(func)\n    def impl(*a, **kw):\n        __tracebackhide__ = True\n        params = func_parameters(func, *a, **kw)\n        args = list(map(lambda x: represent(x), a))\n        with StepContext(self.title.format(*args, **params), params):\n>           return func(*a, **kw)\n\nvenv/lib/python3.9/site-packages/allure_commons/_allure.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<pageObject.login.Login object at 0x7fc40e64fa60>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n            return func(*args, **kwargs)\n        except requests.ConnectionError:\n            print(\"ConnectionError\")\n            reset_driver()\n            func(*args, **kwargs)\n        except Exception as e:\n            log.e('\\t<-- %s, %s, %s', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: 未检查到动态tab\n\ncommon/decorator.py:90: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fc40e00e610>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057748575.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656057748575.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xfe\\xff\\xff\\xff\\xfd\\xff\\xfe\\xf9\\xff\\xfe\\xf3\\xff\\xfe\\xec\\xff\\xfd\\xf0\\xf...d6a-\\xd6cM\\xd6em\\xd6g\\x8d\\xd6i\\xad\\xd6k\\xcd\\xd6m\\xed\\xd6o\\r\\xd7q-\\xd7sM\\xd7um\\xd7w\\x8d\\xd7y\\xad\\xd7{]\\xa8\\x01\\x01\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except wda.WDAElementNotFoundError:\n            print(\"WDAElementNotFoundError\")\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except Exception as e:\n            log.e('<-- %s, %s, %s\\n', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: 未检查到动态tab\n\ncommon/decorator.py:115: Exception","steps":[{"name":"检查更多登录方式","time":{"start":1656057729553,"stop":1656057731556,"duration":2003},"status":"passed","steps":[],"attachments":[{"uid":"81dad930a8a34ba3","name":"Login.select_more_login_window-20220624160211.PNG","source":"81dad930a8a34ba3.png","type":"image/png","size":455346}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fc40e64fa60>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"在更多登录方式抽屉中 勾选已阅读并同意协议","time":{"start":1656057731556,"stop":1656057733835,"duration":2279},"status":"passed","steps":[],"attachments":[{"uid":"3dc09e231a4fe229","name":"Login.select_agreement_box_window-20220624160213.PNG","source":"3dc09e231a4fe229.png","type":"image/png","size":457917}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fc40e64fa60>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"选择手机号登录","time":{"start":1656057733835,"stop":1656057736081,"duration":2246},"status":"passed","steps":[],"attachments":[{"uid":"40ed7b6cd033445a","name":"Login.select_phone_login-20220624160215.PNG","source":"40ed7b6cd033445a.png","type":"image/png","size":260698}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fc40e64fa60>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"选择账号密码登录","time":{"start":1656057737085,"stop":1656057739265,"duration":2180},"status":"passed","steps":[],"attachments":[{"uid":"42d57375d7230642","name":"Login.select_phone_psw_login-20220624160218.PNG","source":"42d57375d7230642.png","type":"image/png","size":274045}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fc40e64fa60>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"输入手机号，密码 , 登录账号","time":{"start":1656057739265,"stop":1656057746534,"duration":7269},"status":"passed","steps":[],"attachments":[{"uid":"b5c791eb16848c1","name":"Login.select_phone_password-20220624160226.PNG","source":"b5c791eb16848c1.png","type":"image/png","size":197001}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fc40e64fa60>, '14030073007', '123456')"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"根据动态tab和我-编辑按钮，检查是否登录账号","time":{"start":1656057746534,"stop":1656057747986,"duration":1452},"status":"broken","statusMessage":"Exception: 未检查到动态tab\n","statusTrace":"  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/jike/PycharmProjects/pythonProject/common/decorator.py\", line 90, in wrapper\n    raise Exception(e)\n","steps":[],"attachments":[{"uid":"e3eb4d197be181c9","name":"Login.check_login_status-20220624160227.PNG","source":"e3eb4d197be181c9.png","type":"image/png","size":196926}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fc40e64fa60>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"6b49e95cc7b4762e","name":"case.gif","source":"6b49e95cc7b4762e.gif","type":"image/gif","size":939104},{"uid":"1e6e52a7758ec0ec","name":"log","source":"1e6e52a7758ec0ec.txt","type":"text/plain","size":1244}],"parameters":[],"stepsCount":6,"attachmentsCount":8,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"xunit_setup_method_fixture_TestLogin::0","time":{"start":1656057750624,"stop":1656057750624,"duration":0},"status":"broken","statusMessage":"TypeError: stop_app() missing 1 required positional argument: 'pkg_name'\n","statusTrace":"  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/_pytest/fixtures.py\", line 941, in _teardown_yield_fixture\n    next(it)\n  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/_pytest/python.py\", line 845, in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/_pytest/python.py\", line 741, in _call_with_optional_argument\n    func()\n  File \"/Users/jike/PycharmProjects/pythonProject/tests/test_00_login.py\", line 23, in teardown_method\n    init().stop_app()\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"labels":[{"name":"feature","value":"登录"},{"name":"tag","value":"jw"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_00_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"jikedeMBP-4"},{"name":"thread","value":"31145-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_00_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["jw"]},"source":"a5fd2e98e8b0ec9f.json","parameterValues":[]}