{"uid":"bcd07eb249aea6e5","name":"test_00_check_agreement","fullName":"tests.test_00_login.TestLogin#test_00_check_agreement","historyId":"8c15465122ca0a416bbfd520393b8926","time":{"start":1656053833264,"stop":1656053847866,"duration":14602},"description":"检查登录页协议更新弹窗","descriptionHtml":"<p>检查登录页协议更新弹窗</p>\n","status":"broken","statusMessage":"Exception: 未检查到动态tab","statusTrace":"args = (<pageObject.login.Login object at 0x7fca83623bb0>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n>           return func(*args, **kwargs)\n\ncommon/decorator.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pageObject.login.Login object at 0x7fca83623bb0>\n\n    @allure.step('根据动态tab和我-编辑按钮，检查是否登录账号')\n    @step\n    def check_login_status(self):\n        # 根据动态tab和我-编辑按钮，检查是否登录账号\n        log.i(\"根据动态tab和我-编辑按钮，检查是否登录账号\")\n>       assert self.s(name=\"动态\", className=\"Button\").exists, \"未检查到动态tab\"\nE       AssertionError: 未检查到动态tab\n\npageObject/login.py:121: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fca836299a0>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656053844412.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656053844412.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xfe\\xff\\xff\\xfd\\xff\\xff\\xfc\\xff\\xff\\xfb\\xff\\xff\\xf9\\xff\\xff\\xff\\xfd\\xf...dTK\\xedTL\\x1dUMmSF=UG-UPMUN\\rUO]UEMRU}UR\\xadUS]TZmUQ\\xbdUV\\xcdUW\\xddUX\\xedUY\\x9dTT\\xfdU^\\rV[MV\\\\e\\xcf\\xf2\\x0c\\x08\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n>           ret = func(*args, **kwargs)\n\ncommon/decorator.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_00_login.TestLogin object at 0x7fca836299a0>\n\n    @allure.description(\"检查登录页协议更新弹窗\")\n    @case\n    def test_00_check_agreement(self):\n>       login.check_agreement()\n\ntests/test_00_login.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def check_agreement():\n        page.check_agreement_update_popup_window()\n        page.select_agreement_update_disagree()\n        # page.check_login_status()\n        page.start_app(pkg_name)\n        page.check_agreement_update_popup_window()\n        page.select_agreement_update_agree()\n>       page.check_login_status()\n\npageObject/login.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\na = (<pageObject.login.Login object at 0x7fca83623bb0>,), kw = {}\n__tracebackhide__ = True\nparams = OrderedDict([('args', '(<pageObject.login.Login object at 0x7fca83623bb0>,)')])\nargs = ['<pageObject.login.Login object at 0x7fca83623bb0>']\n\n    @wraps(func)\n    def impl(*a, **kw):\n        __tracebackhide__ = True\n        params = func_parameters(func, *a, **kw)\n        args = list(map(lambda x: represent(x), a))\n        with StepContext(self.title.format(*args, **params), params):\n>           return func(*a, **kw)\n\nvenv/lib/python3.9/site-packages/allure_commons/_allure.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<pageObject.login.Login object at 0x7fca83623bb0>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n            return func(*args, **kwargs)\n        except requests.ConnectionError:\n            print(\"ConnectionError\")\n            reset_driver()\n            func(*args, **kwargs)\n        except Exception as e:\n            log.e('\\t<-- %s, %s, %s', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: 未检查到动态tab\n\ncommon/decorator.py:90: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fca836299a0>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656053844412.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656053844412.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xfe\\xff\\xff\\xfd\\xff\\xff\\xfc\\xff\\xff\\xfb\\xff\\xff\\xf9\\xff\\xff\\xff\\xfd\\xf...dTK\\xedTL\\x1dUMmSF=UG-UPMUN\\rUO]UEMRU}UR\\xadUS]TZmUQ\\xbdUV\\xcdUW\\xddUX\\xedUY\\x9dTT\\xfdU^\\rV[MV\\\\e\\xcf\\xf2\\x0c\\x08\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except wda.WDAElementNotFoundError:\n            print(\"WDAElementNotFoundError\")\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except Exception as e:\n            log.e('<-- %s, %s, %s\\n', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: 未检查到动态tab\n\ncommon/decorator.py:115: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"xunit_setup_class_fixture_TestLogin","time":{"start":1656053829941,"stop":1656053833263,"duration":3322},"status":"passed","steps":[],"attachments":[{"uid":"60ed59fe6f133a8f","name":"init.activate_app-20220624145711.PNG","source":"60ed59fe6f133a8f.png","type":"image/png","size":532739},{"uid":"12b624ad314e7159","name":"init.check_login_status-20220624145712.PNG","source":"12b624ad314e7159.png","type":"image/png","size":532739}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"检查登录页协议更新弹窗","status":"broken","statusMessage":"Exception: 未检查到动态tab","statusTrace":"args = (<pageObject.login.Login object at 0x7fca83623bb0>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n>           return func(*args, **kwargs)\n\ncommon/decorator.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pageObject.login.Login object at 0x7fca83623bb0>\n\n    @allure.step('根据动态tab和我-编辑按钮，检查是否登录账号')\n    @step\n    def check_login_status(self):\n        # 根据动态tab和我-编辑按钮，检查是否登录账号\n        log.i(\"根据动态tab和我-编辑按钮，检查是否登录账号\")\n>       assert self.s(name=\"动态\", className=\"Button\").exists, \"未检查到动态tab\"\nE       AssertionError: 未检查到动态tab\n\npageObject/login.py:121: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fca836299a0>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656053844412.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656053844412.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xfe\\xff\\xff\\xfd\\xff\\xff\\xfc\\xff\\xff\\xfb\\xff\\xff\\xf9\\xff\\xff\\xff\\xfd\\xf...dTK\\xedTL\\x1dUMmSF=UG-UPMUN\\rUO]UEMRU}UR\\xadUS]TZmUQ\\xbdUV\\xcdUW\\xddUX\\xedUY\\x9dTT\\xfdU^\\rV[MV\\\\e\\xcf\\xf2\\x0c\\x08\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n>           ret = func(*args, **kwargs)\n\ncommon/decorator.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_00_login.TestLogin object at 0x7fca836299a0>\n\n    @allure.description(\"检查登录页协议更新弹窗\")\n    @case\n    def test_00_check_agreement(self):\n>       login.check_agreement()\n\ntests/test_00_login.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def check_agreement():\n        page.check_agreement_update_popup_window()\n        page.select_agreement_update_disagree()\n        # page.check_login_status()\n        page.start_app(pkg_name)\n        page.check_agreement_update_popup_window()\n        page.select_agreement_update_agree()\n>       page.check_login_status()\n\npageObject/login.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\na = (<pageObject.login.Login object at 0x7fca83623bb0>,), kw = {}\n__tracebackhide__ = True\nparams = OrderedDict([('args', '(<pageObject.login.Login object at 0x7fca83623bb0>,)')])\nargs = ['<pageObject.login.Login object at 0x7fca83623bb0>']\n\n    @wraps(func)\n    def impl(*a, **kw):\n        __tracebackhide__ = True\n        params = func_parameters(func, *a, **kw)\n        args = list(map(lambda x: represent(x), a))\n        with StepContext(self.title.format(*args, **params), params):\n>           return func(*a, **kw)\n\nvenv/lib/python3.9/site-packages/allure_commons/_allure.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<pageObject.login.Login object at 0x7fca83623bb0>,), kwargs = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.i('--> %s' % func.__qualname__)\n            return func(*args, **kwargs)\n        except requests.ConnectionError:\n            print(\"ConnectionError\")\n            reset_driver()\n            func(*args, **kwargs)\n        except Exception as e:\n            log.e('\\t<-- %s, %s, %s', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: 未检查到动态tab\n\ncommon/decorator.py:90: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_00_login.TestLogin object at 0x7fca836299a0>,), kwargs = {}\ngif_name = '/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656053844412.gif'\nf = <_io.BufferedReader name='/Users/jike/PycharmProjects/pythonProject/TestReport/iPhoneX_cea307eb34fb7a0ebc2b6402e62de9bdb55cebfa/1656053844412.gif'>\nfile = b'GIF89ae\\x04\\x84\\t\\x87\\x00\\x00\\xff\\xff\\xff\\xff\\xfe\\xff\\xff\\xfd\\xff\\xff\\xfc\\xff\\xff\\xfb\\xff\\xff\\xf9\\xff\\xff\\xff\\xfd\\xf...dTK\\xedTL\\x1dUMmSF=UG-UPMUN\\rUO]UEMRU}UR\\xadUS]TZmUQ\\xbdUV\\xcdUW\\xddUX\\xedUY\\x9dTT\\xfdU^\\rV[MV\\\\e\\xcf\\xf2\\x0c\\x08\\x00;'\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except wda.WDAElementNotFoundError:\n            print(\"WDAElementNotFoundError\")\n            log.d('\\n--> %s', func.__qualname__)\n            ret = func(*args, **kwargs)\n            log.d('<-- %s, %s', func.__qualname__, 'Success')\n            return ret\n        except Exception as e:\n            log.e('<-- %s, %s, %s\\n', func.__qualname__, 'Exception', e)\n>           raise Exception(e)\nE           Exception: 未检查到动态tab\n\ncommon/decorator.py:115: Exception","steps":[{"name":"检查登录协议更新弹窗","time":{"start":1656053833264,"stop":1656053834904,"duration":1640},"status":"passed","steps":[],"attachments":[{"uid":"12cf26ad6a037cd6","name":"Login.check_agreement_update_popup_window-20220624145714.PNG","source":"12cf26ad6a037cd6.png","type":"image/png","size":532739}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fca83623bb0>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"选择不同意并退出","time":{"start":1656053834904,"stop":1656053837623,"duration":2719},"status":"passed","steps":[],"attachments":[{"uid":"48bad625166c6a79","name":"Login.select_agreement_update_disagree-20220624145716.PNG","source":"48bad625166c6a79.png","type":"image/png","size":3162285}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fca83623bb0>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"检查登录协议更新弹窗","time":{"start":1656053838002,"stop":1656053839708,"duration":1706},"status":"passed","steps":[],"attachments":[{"uid":"df7dba3ad9f54072","name":"Login.check_agreement_update_popup_window-20220624145719.PNG","source":"df7dba3ad9f54072.png","type":"image/png","size":532739}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fca83623bb0>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"选择同意协议","time":{"start":1656053839708,"stop":1656053841593,"duration":1885},"status":"passed","steps":[],"attachments":[{"uid":"f5f99f3cc62aa1df","name":"Login.select_agreement_update_agree-20220624145721.PNG","source":"f5f99f3cc62aa1df.png","type":"image/png","size":392327}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fca83623bb0>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"根据动态tab和我-编辑按钮，检查是否登录账号","time":{"start":1656053841593,"stop":1656053843111,"duration":1518},"status":"broken","statusMessage":"Exception: 未检查到动态tab\n","statusTrace":"  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/jike/PycharmProjects/pythonProject/common/decorator.py\", line 90, in wrapper\n    raise Exception(e)\n","steps":[],"attachments":[{"uid":"513b965d081c5762","name":"Login.check_login_status-20220624145722.PNG","source":"513b965d081c5762.png","type":"image/png","size":392500}],"parameters":[{"name":"args","value":"(<pageObject.login.Login object at 0x7fca83623bb0>,)"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"dfd0cd0215028f7","name":"case.gif","source":"dfd0cd0215028f7.gif","type":"image/gif","size":4205762},{"uid":"942e4a071b2a6269","name":"log","source":"942e4a071b2a6269.txt","type":"text/plain","size":1110}],"parameters":[],"stepsCount":5,"attachmentsCount":7,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"xunit_setup_class_fixture_TestLogin::0","time":{"start":1656053912551,"stop":1656053912552,"duration":1},"status":"broken","statusMessage":"TypeError: stop_app() missing 1 required positional argument: 'pkg_name'\n","statusTrace":"  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/_pytest/fixtures.py\", line 941, in _teardown_yield_fixture\n    next(it)\n  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/_pytest/python.py\", line 815, in xunit_setup_class_fixture\n    _call_with_optional_argument(func, self.obj)\n  File \"/Users/jike/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/_pytest/python.py\", line 739, in _call_with_optional_argument\n    func(arg)\n  File \"/Users/jike/PycharmProjects/pythonProject/tests/test_00_login.py\", line 23, in teardown_class\n    init().stop_app()\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"labels":[{"name":"feature","value":"登录"},{"name":"tag","value":"jw"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_00_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"jikedeMacBook-Pro-4.local"},{"name":"thread","value":"28181-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_00_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["jw"]},"source":"bcd07eb249aea6e5.json","parameterValues":[]}